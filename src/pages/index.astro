---
import Layout from '@layouts/Layout.astro'
import Header from '@components/ui/Header.astro'
import { GRADUATES } from '@data/GRADUATES'
import Reel from '@components/Reel.astro'
import Footer from '@components/ui/Footer.astro'
---

<Layout title='Escuela de Arquitectura, Universidad de La Serena'>
	<Header class='absolute top-0 w-full z-10 !text-white landscape:!text-primary' />
	<main class='swiper-footer swiper h-full w-full'>
		<div class='swiper-wrapper'>
			<div class='swiper-slide'>
				<div class='swiper-reel swiper h-full w-full'>
					<article class='swiper-wrapper'>
						{
							GRADUATES.map((graduateInfo, i) => (
								<Reel info={graduateInfo} index={i + 1} total={GRADUATES.length} />
							))
						}
					</article>
				</div>
			</div>
			<Footer class='swiper-slide' />
		</div>
	</main>
</Layout>

<script>
	import Swiper from 'swiper'
	import { Navigation, Keyboard, Mousewheel } from 'swiper/modules'

	// FOOTER SLIDER
	const swiperFooter = new Swiper('.swiper-footer', {
		modules: [Keyboard],
		keyboard: {
			enabled: true,
			onlyInViewport: false
		}
	})

	const header = document.querySelector('header') as HTMLHeadElement

	swiperFooter.on('slideChangeTransitionStart', () => {
		header.classList.toggle('hidden')
	})

	//	REEL SLIDERS
	type SlideOnTypes = ({ slides }: { slides: HTMLElement[] }, afterinit?: boolean) => void
	type PausePlayReel = (reel: HTMLVideoElement, button: HTMLSpanElement) => void

	export const pauseReel: PausePlayReel = (reel, button) => {
		reel.pause()
		button.style.opacity = '0.8'
	}

	export const playReel: PausePlayReel = (reel, button) => {
		reel
			.play()
			.then(() => (button.style.opacity = '0'))
			.catch((error) => {
				pauseReel(reel, button)
				console.warn(error)
			})
	}

	const playActiveSlider: SlideOnTypes = ({ slides }, afterinit) => {
		slides.forEach((slide) => {
			const reelWrapper = slide.querySelector('section') as HTMLElement
			const reel = reelWrapper?.querySelector('video') as HTMLVideoElement
			const reelMuteButton = reelWrapper.querySelector('span') as HTMLSpanElement

			reel.volume = +window.isReelsMuted || 1

			if (afterinit) {
				reelWrapper.addEventListener('click', () => {
					if (reel.paused) {
						playReel(reel, reelMuteButton)
					} else {
						pauseReel(reel, reelMuteButton)
					}
				})
			}

			if (slide.classList.contains('swiper-slide-active')) return playReel(reel, reelMuteButton)

			pauseReel(reel, reelMuteButton)
			reel.currentTime = 0
		})
	}

	const swiperReel = new Swiper('.swiper-reel', {
		modules: [Navigation, Keyboard, Mousewheel],
		keyboard: {
			enabled: true,
			onlyInViewport: false
		},
		direction: 'vertical',
		loop: true,
		mousewheel: true,
		on: {
			afterInit: ({ slides }) => playActiveSlider({ slides }, true),
			slideNextTransitionStart: playActiveSlider,
			slidePrevTransitionStart: playActiveSlider
		}
	})

	//TODO:  REFACTOR THIS SCRIPT
</script>
